#include <iostream>
#include <vector>

class SparseMatrix {
private:
    int rows, cols;
    std::vector<std::vector<int>> elements;

public:
    SparseMatrix(int r, int c) : rows(r), cols(c) {}

    void addElement(int row, int col, int value) {
        if (value != 0) {
            elements.push_back({row, col, value});
        }
    }

    void display() const {
        int k = 0;
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (k < elements.size() && elements[k][0] == i && elements[k][1] == j) {
                    std::cout << elements[k][2] << " ";
                    k++;
                } else {
                    std::cout << "0 ";
                }
            }
            std::cout << std::endl;
        }
    }
};

int main() {
    SparseMatrix matrix(4, 5);

    matrix.addElement(0, 2, 3);
    matrix.addElement(0, 4, 4);
    matrix.addElement(1, 2, 5);
    matrix.addElement(1, 3, 7);
    matrix.addElement(3, 1, 2);
    matrix.addElement(3, 2, 6);

    matrix.display();

    return 0;
}
